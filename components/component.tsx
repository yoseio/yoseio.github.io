/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/gCa3qbeD9Kv
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
"use client"

import { useState, useMemo } from "react"
import { Input } from "@/components/ui/input"
import { Card, CardContent } from "@/components/ui/card"
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import Link from "next/link"

export function Component() {
  const [searchTerm, setSearchTerm] = useState("")
  const filteredItems = useMemo(() => {
    const groupedByYear = {}
    ;[
      {
        date: "2019/03/11",
        title: "Markdown Syntax Guide",
        href: "#",
      },
      {
        date: "2019/03/09",
        title: "Placeholder Text",
        href: "#",
      },
      {
        date: "2019/03/08",
        title: "Math Typesetting",
        href: "#",
      },
      {
        date: "2019/03/05",
        title: "Emoji Support",
        href: "#",
      },
      {
        date: "2017/03/11",
        title: "Lorem ipsum dolores eos",
        href: "#",
      },
      {
        date: "2017/03/11",
        title: "Lorem ipsum dol ratione voluptatem",
        href: "#",
      },
      {
        date: "2016/09/08",
        title: "Lorem ipsum sit ale natus unde",
        href: "#",
      },
      {
        date: "2016/07/08",
        title: "Lorem ipsum persp unde omnis",
        href: "#",
      },
      {
        date: "2015/09/08",
        title: "Lorem res eos qui ratione voluptatem",
        href: "#",
      },
      {
        date: "2015/09/08",
        title: "Lorem qui ratione voluptatem",
        href: "#",
      },
      {
        date: "2015/09/08",
        title: "Lorem ipsum qui ratione voluptatem",
        href: "#",
      },
      {
        date: "2015/09/08",
        title: "Lorem ipsum magni ratione voluptatem",
        href: "#",
      },
      {
        date: "2015/09/08",
        title: "Lorem ipsum magni eos voluptatem",
        href: "#",
      },
      {
        date: "2015/09/08",
        title: "Lorem ipsne voluptatem dolores eos",
        href: "#",
      },
      {
        date: "2014/09/08",
        title: "Loremratione voluptatem",
        href: "#",
      },
      {
        date: "2014/09/08",
        title: "Lorem pers unde dolores",
        href: "#",
      },
      {
        date: "2014/09/08",
        title: "Lorem ipsum te",
        href: "#",
      },
      {
        date: "2014/09/08",
        title: "Lorem ipsum dol voluptatem",
        href: "#",
      },
      {
        date: "2014/09/08",
        title: "Lorem ipsum dol eos qui ratione",
        href: "#",
      },
      {
        date: "2014/05/08",
        title: "Lorem ipsum unde omnis iste",
        href: "#",
      },
      {
        date: "2013/09/08",
        title: "Lorem ipsum tut dolores eos qui ration",
        href: "#",
      },
      {
        date: "2013/09/08",
        title: "Lorem ipsum tut",
        href: "#",
      },
      {
        date: "2013/09/08",
        title: "Lorem ipsum tut",
        href: "#",
      },
    ]
      .filter((item) => item.title.toLowerCase().includes(searchTerm.toLowerCase()))
      .forEach((item) => {
        const year = item.date.split("/")[0]
        if (!groupedByYear[year]) {
          groupedByYear[year] = []
        }
        groupedByYear[year].push(item)
      })
    return Object.entries(groupedByYear).map(([year, items]) => ({
      year,
      items,
    }))
  }, [searchTerm])
  return (
    <div className="max-w-2xl mx-auto p-4">
      <div className="flex items-center mb-4">
        <h1 className="text-xl font-bold">Minimalist</h1>
        <div className="ml-auto">
          <div className="relative">
            <SearchIcon className="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-muted-foreground" />
            <Input
              type="text"
              placeholder="Search..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="px-10 py-2 border rounded-full w-64 focus:ring-2 focus:ring-primary focus:border-primary"
            />
          </div>
        </div>
      </div>
      <Card className="mb-8 max-w-sm mx-auto">
        <CardContent className="flex items-center gap-4">
          <Avatar>
            <AvatarImage src="/placeholder-user.jpg" alt="@username" />
            <AvatarFallback>JD</AvatarFallback>
          </Avatar>
          <div className="flex flex-col">
            <h3 className="font-bold">John Doe</h3>
            <div className="flex items-center gap-2 mt-2">
              <Link href="#" className="text-muted-foreground hover:text-primary" prefetch={false}>
                <TwitterIcon className="w-5 h-5" />
              </Link>
              <Link href="#" className="text-muted-foreground hover:text-primary" prefetch={false}>
                <GithubIcon className="w-5 h-5" />
              </Link>
            </div>
          </div>
        </CardContent>
      </Card>
      <div className="space-y-8">
        {filteredItems.map(({ year, items }, index) => (
          <div key={index}>
            <h2 className="text-lg font-bold mb-2">{year}</h2>
            <ul className="space-y-2">
              {items.map((item, itemIndex) => (
                <li key={itemIndex} className="flex items-center">
                  <span className="text-gray-600 w-24 inline-block text-right mr-4 font-mono">
                    {item.date.split("/")[1] + "/" + item.date.split("/")[2]}
                  </span>
                  <a href="#" className="text-blue-600">
                    {item.title}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </div>
  )
}

function GithubIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4" />
      <path d="M9 18c-4.51 2-5-2-7-2" />
    </svg>
  )
}


function SearchIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.3-4.3" />
    </svg>
  )
}


function TwitterIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z" />
    </svg>
  )
}
